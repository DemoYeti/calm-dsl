# THIS FILE IS AUTOMATICALLY GENERATED.
# Disclaimer: Please test this file before using in production.
"""
Generated blueprint DSL (.py)
"""

import json  # no_qa
import os  # no_qa

from calm.dsl.builtins import *  # no_qa


# Secret Variables
BP_CRED_SSHUSER_KEY = read_local_file("BP_CRED_SSHUSER_KEY")

# Credentials
BP_CRED_SSHUSER = basic_cred(
    "centos",
    BP_CRED_SSHUSER_KEY,
    name="SSHUSER",
    type="KEY",
    default=True,
    editables={"username": True, "secret": True},
)


AHV_CENTOS_78 = vm_disk_package(
    name="AHV_CENTOS_78",
    description="",
    config={
        "image": {
            "name": "CENTOS-7-x86_64-2003",
            "type": "DISK_IMAGE",
            "source": "http://download.nutanix.com/Calm/CentOS-7-x86_64-2003.qcow2",
            "architecture": "X86_64",
        },
        "product": {},
        "checksum": {},
    },
)


class Snort(Service):

    pass


class Snortcalm_randomResources(AhvVmResources):

    memory = 4
    vCPUs = 2
    cores_per_vCPU = 1
    disks = [AhvVmDisk.Disk.Scsi.cloneFromVMDiskPackage(AHV_CENTOS_78, bootable=True)]
    nics = [AhvVmNic.NormalNic.ingress("vlan.0", cluster="Goten-1")]

    guest_customization = AhvVmGC.CloudInit(
        filename=os.path.join("specs", "Snortcalm_random_cloud_init_data.yaml")
    )


class Snortcalm_random(AhvVm):

    name = "Snort-@@{calm_random}@@"
    resources = Snortcalm_randomResources


class AHVSnort(Substrate):

    os_type = "Linux"
    provider_type = "AHV_VM"
    provider_spec = Snortcalm_random
    provider_spec_editables = read_spec(
        os.path.join("specs", "AHVSnort_create_spec_editables.yaml")
    )
    readiness_probe = readiness_probe(credential=ref(BP_CRED_SSHUSER), disabled=False)


class Snort_Installation_Configuration(Package):

    services = [ref(Snort)]

    @action
    def __install__():

        CalmTask.Exec.ssh(
            name="Snort_Insall_and _Configure",
            filename=os.path.join(
                "scripts",
                "Package_Snort_Installation_Configuration_Action___install___Task_Snort_Insall_and_Configure.sh",
            ),
            cred=ref(BP_CRED_SSHUSER),
            target=ref(Snort),
        )


class AHVSnortDeployment(Deployment):

    min_replicas = "1"
    max_replicas = "1"
    default_replicas = "1"

    packages = [ref(Snort_Installation_Configuration)]
    substrate = ref(AHVSnort)


class Nutanix(Profile):

    deployments = [AHVSnortDeployment]


class Snort(Blueprint):
    """Accessibility:
* Command line"""

    services = [Snort]
    packages = [Snort_Installation_Configuration, AHV_CENTOS_78]
    substrates = [AHVSnort]
    profiles = [Nutanix]
    credentials = [BP_CRED_SSHUSER]
